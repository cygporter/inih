name: CI
on: [push, pull_request]
jobs:
  build-test:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash --noprofile --norc -e -o pipefail -o igncr {0}
    env:
      PATH: C:\cygwin\bin
    steps:

      - name: Configure Git for Windows' core.autocrlf
        run: git config --global core.autocrlf input
        timeout-minutes: 1

      - name: Checkout
        uses: actions/checkout@v3
        timeout-minutes: 1

      - name: Install cygport
        uses: cygwin/cygwin-install-action@v2
        with:
          packages: cygport
        timeout-minutes: 10

      - name: Load variables from the cygport file
        run: |
          eval "$(cygport libinih.cygport vars BUILD_REQUIRES PVR)"
          printf 'BUILD_REQUIRES=%s\n' "$BUILD_REQUIRES" >>"$GITHUB_ENV"
          printf 'PVR=%s\n' "$PVR" >>"$GITHUB_ENV"
        timeout-minutes: 1

      - name: Install Cygwin build requirements
        uses: cygwin/cygwin-install-action@v2
        with:
          packages: ${{ env.BUILD_REQUIRES }}
        timeout-minutes: 30

      - name: Generate cygcheck output
        if: always()
        run: cygcheck -srv >/var/log/cygcheck.out
        timeout-minutes: 5

      - name: Store Cygwin logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cygwin-logs
          path: 'C:\cygwin\var\log\'
        timeout-minutes: 5

      - name: Cygport download
        run: cygport libinih.cygport download
        timeout-minutes: 5

      - name: Cygport prep
        run: cygport libinih.cygport prep
        timeout-minutes: 1

      - name: Cygport compile
        run: cygport libinih.cygport compile
        timeout-minutes: 30

      - name: Cygport test
        run: cygport libinih.cygport test
        timeout-minutes: 300

      - name: Cygport install
        run: cygport libinih.cygport install
        timeout-minutes: 30

      - name: Cygport package
        run: cygport libinih.cygport package
        timeout-minutes: 5

      - name: Tar up build results
        if: always()
        run: tar -caf libinih-build-results.txz libinih-*-*.*/
        timeout-minutes: 10

      - name: Store build results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-results
          path: libinih-build-results.txz
          if-no-files-found: error
        timeout-minutes: 5
